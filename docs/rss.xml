<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>不知名博客</title><link>https://Thisisa1.github.io</link><description>不知名的博客</description><copyright>不知名博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://Thisisa1.github.io</link></image><lastBuildDate>Sun, 23 Jun 2024 16:07:47 +0000</lastBuildDate><managingEditor>不知名博客</managingEditor><ttl>60</ttl><webMaster>不知名博客</webMaster><item><title>Python爬取梨视频代码</title><link>https://Thisisa1.github.io/post/Python-pa-qu-li-shi-pin-dai-ma.html</link><description>```python&#13;
if __name__ == '__main__':&#13;
    import requests as req&#13;
    import json&#13;
    from lxml import etree&#13;
    from tqdm import tqdm&#13;
    import os&#13;
    import win32con&#13;
    import win32api&#13;
    import random&#13;
    path_list = os.listdir('.')&#13;
    if 'PearVideo DownLoad' in path_list:&#13;
        pass&#13;
    else:&#13;
        os.mkdir('./PearVideo DownLoad')&#13;
    try:&#13;
        while True:&#13;
            url = str(input('请输入要下载梨视频的链接：'))&#13;
            video_id = url.split('_')[1]&#13;
            headers = {&#13;
                'Referer': f'https://www.pearvideo.com/video_{video_id}',&#13;
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36'&#13;
            }&#13;
            with req.get(url=url, headers=headers) as resp_title:&#13;
                html = etree.HTML(resp_title.text)&#13;
                video_title = html.xpath('//*[@id='detailsbd']/div[1]/div[2]/div/div[1]/h1/text()')&#13;
            video_s = f'https://www.pearvideo.com/videoStatus.jsp'&#13;
            video_params = {&#13;
                'contId': f'{video_id}'&#13;
            }&#13;
            with req.get(url=video_s, headers=headers, params=video_params) as resp:&#13;
                js = json.loads(resp.text)&#13;
                resp.close()&#13;
            systemtime = str(js['systemTime'])&#13;
            video_url = str(js['videoInfo']['videos']['srcUrl'])&#13;
            video_url = video_url.replace(systemtime, f'cont-{video_id}')&#13;
            color_list = ['BLACK', 'RED', 'GREEN', 'YELLOW', 'BLUE', 'MAGENTA', 'CYAN', 'WHITE']&#13;
            with req.get(url=video_url, headers=headers, stream=True) as response:&#13;
                video_size = int(response.headers['Content-Length']) // (1024 * 1024)&#13;
                with open(f'./PearVideo DownLoad/{video_title[0]}.mp4', 'wb+') as f:&#13;
                    for data in tqdm(iterable=response.iter_content(1024 * 1024), total=video_size, unit='MB',desc=f'正在下载{video_title[0]}.mp4    文件大小{video_size}MB', leave=False, colour=color_list[random.randint(0, 7)]):&#13;
                        f.write(data)&#13;
                    f.close()&#13;
                response.close()&#13;
            print(f'{url}下载完成！')&#13;
    except:&#13;
        win32api.MessageBox(0, 'ERROR', 'ERROR', win32con.MB_YESNOCANCEL | win32con.MB_ICONSTOP)&#13;
```。</description><guid isPermaLink="true">https://Thisisa1.github.io/post/Python-pa-qu-li-shi-pin-dai-ma.html</guid><pubDate>Sun, 23 Jun 2024 01:24:56 +0000</pubDate></item></channel></rss>